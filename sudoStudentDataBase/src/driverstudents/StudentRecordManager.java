/*
Mathew Buck
Java II Lab A
 */
package driverstudents;

import java.util.ArrayList;
import java.util.Iterator;

//maintains and manipulates a list of students 
public class StudentRecordManager {

    ArrayList<Student> studList = new ArrayList<>();
    int numStudents = 0;
    Student noStud = new Student("No Such Student", "", 00000, "none");
    
    
    public void addCourse(int ID, String course, char grade) {
        searchID(ID).Course(course, grade);
    }

    //search by student ID
    public Student searchID(int ID) {
        Student s = noStud;
        for (int i = 0; i < studList.size(); i++) {
            if (ID == studList.get(i).getID(studList.get(i))) {
                s = studList.get(i);
                return s;
            }
        }
        return s;
    }

    //searches through the list of students first and last names for 
    //the key String
    //returns a list of the students whose first or last names contain 
    //the key String
    public ArrayList<Student> searchName(String key) {
        ArrayList<Student> foundList = new ArrayList();
        foundList.add(searchFirstName(key));
        foundList.add(searchLastName(key));
       return foundList;
    }
    
    //helper method for searchName(String key)
    public Student searchFirstName(String key) {
        boolean contains = false;
        String name = "";
        Student s = noStud;

        for (int i = 0; i < studList.size(); i++) {
            s = studList.get(i);
            name = s.getFirstName(studList.get(i));
            contains = name.contains(key);
            if (contains) {
                return s;
            }
        }
        return noStud;
    }
    
    //helper method for searchName(String key)
    public Student searchLastName(String key) {
        boolean contains = false;
        String name = "";
        Student s = noStud;

        for (int i = 0; i < studList.size(); i++) {
            s = studList.get(i);
            name = s.getLastName(studList.get(i));
            contains = name.contains(key);
            if (contains) {
                return s;
            }
        }
        return noStud;
    }

    //adds a student to the list
    public void addStud(String fn, String ln, int numCourses) {
        Student s = new Student(fn, ln, numCourses);
        studList.add(s);
        numStudents++;
    }

    //removes a student from the list based on ID number
    public void remStud(int ID) {
        if (searchID(ID) == noStud) {
            System.out.println("No Such Student.");
        } else {
            studList.remove(searchID(ID));
            numStudents--;
        }
    }
    
    //creates an array of all the student ID numbers in the list
    public int[] loadIDs(){
        int[] IDs = new int[studList.size()];
        for (int i = 0; i < studList.size(); i++){
            IDs[i] = studList.get(i).getID(studList.get(i));
        }
        return IDs;
    }

    public String toString() {
        return studList.toString();
    }
    
    //creates a TranscriptPrinter I can access from other classes
    public TranscriptPrinter TranscriptPrinter(){
        return new TranscriptPrinter();
    }
    
    //creates an iterator that I can get to from othrer classes
    public srIterator iterator() {
        return new srIterator();
    }

    //helper class to StudentRecordManager////////////////////////////////////
    public class srIterator implements Iterator {
        int i = 0;
        Student s = null;
        
        public boolean hasNext() {
            if (i != studList.size()) {
                return true;
            } 
            //reset index for next use
            else {
                i = 0;
                return false;
            }
        }

        public Student next() {
            if (hasNext()) {
                s = studList.get(i);
                i++;
            }
            return s;
        }

    //end helper iterator 
    }

    //helper class for StudentRecordManager////////////////////////////////
    public class TranscriptPrinter {
        
        //prints transcripts by useing two seperate iterators
        public void printTranscript(srIterator itr, int ID) {
            while(itr.hasNext()){
                Student element = itr.next();
                if(element.getID(element) == ID){
                   System.out.println("STUDENT TRANSCRIPT");
                   System.out.println(element + " Email: " 
                           + element.getEmail(element));
                   element.printCourses(element);
                   return;
                }
            }
            System.out.println("Student is not in the system.");
        }
        
        //prints a list of transcripts generated by an array of student IDs
        public void printTranscript(srIterator itr, int[] IDs) {
            for (int i = 0; i < IDs.length; i++) {
                while (itr.hasNext()) {
                    Student element = itr.next();
                    if (IDs[i] == element.getID(element)) {
                        System.out.println("STUDENT TRANSCRIPT");
                        System.out.println(element + " Email: "
                                + element.getEmail(element));
                        element.printCourses(element);
                        System.out.println();
                    }
                }
            }
        }

    //end helper TranscriptPrinter
    }

//end class
}
